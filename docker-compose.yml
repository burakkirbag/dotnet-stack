version: "3.8"
services:
  stack-postgresql:
    container_name: stack-postgresql
    image: postgres:latest
    ports:
      - 5532:5432
    environment:
      - POSTGRES_PASSWORD=1234567890
    volumes:
      - stack-postgresql:/var/lib/postgresql/data
    networks:
      - stack-localhost
    restart: always

  stack-backend:
    container_name: stack-backend
    image: stack-backend
    build:
      context: backend
      dockerfile: dev.Dockerfile
    environment:
      - STACK_CONNECTION_STRING=Server=stack-postgresql;Port=5432;Database=stack;User Id=postgres;Password=1234567890
      - 'STACK_JWT_AUTH_OPTIONS={"Issuer" : "backend.stack.localhost/api", "Audience" : "stack.localhost", "TokenValidityDay" : 30, "SigningKey" : "xecretKeywqejane", "RoleClaimType" : "Roles"}'
      - 'STACK_COOKIE_AUTH_OPTIONS={"Name" : "stack-identity", "ValidityDay" : 30}'
    ports:
      - 12001:5000
    links:
      - stack-postgresql
    depends_on:
      - "stack-postgresql"
    networks:
      - stack-localhost
    restart: always

  stack-frontend:
    container_name: stack-frontend
    image: stack-frontend
    build:
      context: frontend
      dockerfile: dev.Dockerfile
    ports:
      - 12002:8080
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - stack-localhost
    restart: always

  stack-load-balancer:
    image: nginx:latest
    container_name: stack-load-balancer
    depends_on:
      - stack-backend
    networks:
      - stack-localhost
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80

volumes:
  stack-postgresql:
    external: true

networks:
  stack-localhost:
    driver: bridge
